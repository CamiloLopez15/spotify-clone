---
import PlaylistItemCard from "@/components/PlayListItemCard.astro";
import Layout from "@/layouts/Layout.astro";
// import Greeting from "@/components/Greeting.svelte";

import { type Album } from "@/lib/types";

const getAlbums = async (): Promise<Album[]> => {
  const res = await fetch("http://localhost:8080/api/albums");
  const data = await res.json();
  return data;
};

const albums: Album[] = await getAlbums();
---

<Layout title="Spotify-clone">
  <div
    id="playlist-container"
    class="relative transition-all duration-1000 bg-green-600 pt-4"
  >
    <!-- PageHeader -->
    <div class="relative z-10 px-6 pt-10">
      <!-- Greeating -->
      <!-- <Greeting /> -->

      <div
        class="flex lg:justify-start lg:items-start justify-center flex-wrap mt-6 gap-4"
      >
        {albums.map((album) => <PlaylistItemCard album={album} />)}
      </div>
    </div>

    <div
      class="absolute inset-0 bg-gradient-to-t from-zinc-900 via-zinc-900/80 -z-1"
    >
    </div>
  </div>
</Layout>

<style></style>
<script>
  async function ValidationToken() {
    try {
      const storedToken = localStorage.getItem("token");
      const response = await fetch("http://localhost:8080/api/validation", {
        headers: {
          Authorization: `Bearer ${storedToken}`, // Incluir el token en el encabezado de autorizaci√≥n
        },
      });
      const data = await response.json();
      if (data.error) {
        window.location.href = "/login";
      }
      console.log("Respuesta del servidor:", data);
    } catch (error) {
      console.error(error);
    }
  }
  ValidationToken();
</script>
