---
import Layout from "./../layouts/CountLayout.astro";
import { useErrorCountStore } from "../store/errorCountStore.js";
---

<Layout title="Spotify Clone">
  <div class="flex min-h-full flex-col justify-center px-6 py-12 lg:px-8">
    <div class="sm:mx-auto sm:w-full sm:max-w-sm">
      <img
        class="mx-auto h-16 w-auto bg-zinc-900 p-2 rounded-full hover:scale-110 transition-all duration-150"
        src="https://upload.wikimedia.org/wikipedia/commons/thumb/8/84/Spotify_icon.svg/1982px-Spotify_icon.svg.png"
        alt="Spotify clone"
      />
      <h2
        class="mt-3 text-center text-2xl font-bold leading-9 tracking-tight text-green-600"
      >
        Registro
      </h2>
    </div>

    <div class="mt-8 sm:mx-auto sm:w-full sm:max-w-sm">
      <form class="space-y-6" id="register-form">
        <div>
          <label
            for="name"
            class="block text-sm font-medium leading-6 text-green-600"
            >Name</label
          >
          <div class="mt-2">
            <input
              id="name"
              name="name"
              type="text"
              autocomplete="name"
              required
              class="block w-full rounded-md border-0 p-1.5 focus:ring-0 focus:outline-none text-white bg-zinc-900 sm:text-sm sm:leading-6"
            />
          </div>
        </div>

        <div>
          <label
            for="email"
            class="block text-sm font-medium leading-6 text-green-600"
            >Correo</label
          >
          <div class="mt-2">
            <input
              id="email"
              name="email"
              type="email"
              autocomplete="email"
              required
              class="block w-full rounded-md border-0 p-1.5 focus:ring-0 focus:outline-none text-white bg-zinc-900 sm:text-sm sm:leading-6"
            />
          </div>
        </div>

        <div>
          <div class="flex items-center justify-between">
            <label
              for="password"
              class="block text-sm font-medium leading-6 text-green-600"
              >Contraseña</label
            >
            <div class="text-sm">
              <a
                href="#"
                class="font-semibold text-green-600 hover:text-green-500"
                >¿Olvidaste tu contraseña?</a
              >
            </div>
          </div>
          <div class="mt-2">
            <input
              id="password"
              name="password"
              type="password"
              minlength="8"
              autocomplete="current-password"
              required
              class="block w-full rounded-md border-0 p-1.5 focus:ring-0 focus:outline-none text-white bg-zinc-900 sm:text-sm sm:leading-6"
            />
          </div>
        </div>

        <div>
          <button
            type="submit"
            class="flex w-full justify-center rounded-md bg-green-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-green-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-green-600"
            >Registrarme</button
          >
        </div>
      </form>

      <p class="mt-10 text-center text-sm text-gray-500">
        ¿Ya tienes una cuenta?
        <a
          href="/sign-in"
          class="font-semibold leading-6 text-green-600 hover:text-green-500"
          >Inicia sesión acá</a
        >
      </p>
    </div>
  </div>
  <script>
    const form = document.getElementById("register-form");
    const name = document.getElementById("name");
    const email = document.querySelector("email");
    const password = document.querySelector("password");

    const name_value = name?.value.trim();
    const email_value = email?.value.trim();
    const password_value = password?.value.trim();
    async function enviarDatos({
      name,
      email,
      password,
    }: {
      name: string;
      email: string;
      password: string;
    }) {
      const formData = {
        name,
        email,
        password,
      };
      try {
        const response = await fetch("http://localhost:8080/api/register", {
          method: "POST",
          body: JSON.stringify(formData),
          headers: {
            "Content-Type": "application/json", // Establecer el tipo de contenido como JSON
          },
        });

        if (!response.ok) {
          const {error} = await response.json();
          throw new Error(`El estado es: ${response.status}.
          Mensaje del error: ${error}`)
        }

        const responseData = await response.json();
        console.log("Respuesta del servidor:", responseData);
      } catch (error) {
        console.error("Error al enviar los datos:", error);
      }
    }

    form?.addEventListener("submit", (e) => {
      e.preventDefault();
      const name_value = (document.querySelector("#name") as HTMLInputElement)
        .value;
      const email_value = (document.querySelector("#email") as HTMLInputElement)
        .value;
      const password_value = (
        document.querySelector("#password") as HTMLInputElement
      ).value;
      enviarDatos({
        name: name_value,
        email: email_value,
        password: password_value,
      });
    });
  </script>
</Layout>
